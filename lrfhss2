% Ensure Communications Toolbox is installed
assert(~isempty(ver('comm')), 'Communications Toolbox is required.');

% LoRaWAN parameters
sf = 7;               % Spreading Factor
bw = 125e3;           % Bandwidth (125 kHz)
cr = 4/5;             % Coding Rate
fc = 868.1e6;         % Center Frequency (in Hz)
txPower = 14;         % Transmission Power (in dBm)
numFrames = 100;      % Number of frames to transmit
payloadLength = 50;   % Length of the payload in bytes

% Create LoRaWAN Transmitter object
loraTx = loraTransmitter('SpreadingFactor', sf, 'Bandwidth', bw, ...
                         'CodingRate', cr, 'Frequency', fc, ...
                         'TransmitPower', txPower);

% Create LoRaWAN Receiver object
loraRx = loraReceiver('SpreadingFactor', sf, 'Bandwidth', bw, ...
                      'CodingRate', cr, 'Frequency', fc);

% Simulation parameters
snr = 30;  % Signal-to-Noise Ratio in dB
delays = zeros(1, numFrames);
packetLoss = 0;
receivedBytes = zeros(1, numFrames);

% Simulation loop
for frameIdx = 1:numFrames
    % Generate random payload data
    payloadData = randi([0 255], payloadLength, 1, 'uint8');
    
    % Transmit LoRaWAN frame
    txWaveform = loraTx(payloadData);
    
    % Pass the transmitted waveform through a channel (Add noise)
    rxWaveform = awgn(txWaveform, snr, 'measured');  % Add white Gaussian noise
    
    % Measure start time
    startTime = tic;
    
    % Receive LoRaWAN frame
    [receivedData, frameInfo] = loraRx(rxWaveform);
    
    % Measure end time and calculate delay
    delay = toc(startTime);
    delays(frameIdx) = delay;
    
    % Analyze the received data and frame information
    if ~isempty(receivedData)
        receivedBytes(frameIdx) = length(receivedData);
    else
        packetLoss = packetLoss + 1;
    end
end

% Calculate metrics
packetLossRate = (packetLoss / numFrames) * 100;
averageDelay = mean(delays);
throughput = sum(receivedBytes) / numFrames;

% Plot results
figure;
subplot(3, 1, 1);
plot(1:numFrames, delays, '-o');
title('Packet Transmission Delay');
xlabel('Frame Index');
ylabel('Delay (s)');

subplot(3, 1, 2);
plot(1:numFrames, receivedBytes, '-o');
title('Received Bytes per Frame');
xlabel('Frame Index');
ylabel('Bytes');

subplot(3, 1, 3);
bar(1, packetLossRate);
title('Packet Loss Rate');
xlabel('Simulation');
ylabel('Loss Rate (%)');

% Display throughput
fprintf('Average Delay: %.4f s\n', averageDelay);
fprintf('Packet Loss Rate: %.2f %%\n', packetLossRate);
fprintf('Throughput: %.2f bytes/frame\n', throughput);
